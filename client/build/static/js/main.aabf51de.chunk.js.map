{"version":3,"sources":["base/constants/colors.js","base/constants/fonts.js","base/globalStyle.js","service/generateDate.ts","service/apis/request-covid-data.ts","hooks/useCovidData.tsx","service/get-current-pos.ts","service/apis/request-address.ts","hooks/useGeoData.tsx","hooks/useGeoCovidData.tsx","base/constants/responsive.js","base/constants/whitespace.js","base/mixins/flexbox.ts","layouts/grids/col.tsx","layouts/grids/container.tsx","layouts/grids/row.tsx","components/header.tsx","components/criteria.tsx","components/section.tsx","components/spinner.tsx","layouts/sidoCovid.tsx","charts/totalDefChart.tsx","layouts/defCntOfWeek.tsx","layouts/defCntOfToday.tsx","charts/genDefChart.tsx","layouts/genDefCovid.tsx","table/body.tsx","table/head.tsx","table/table.tsx","layouts/sidoCovidTable.tsx","App.jsx","index.tsx"],"names":["colors","variable","blue","gray","red","white","black","fonts","family","base","size","sm","md","lg","xl","weight","light","bold","GlobalStyle","createGlobalStyle","normalize","attachZeroToLeadingDigit","day","parseInt","toString","generateDate","fewDaysAgo","date","Date","setDate","getDate","targetDate","toLocaleDateString","split","map","item","trim","join","makeOpenApiAxiosInstance","startCreateDt","endCreateDt","openApiConfig","baseURL","params","serviceKey","process","pageNo","numOfRows","axios","create","covid19GenAgeInstance","covid19SidoInstance","useCovidData","useState","covidData","setCovidData","getRequest","a","Promise","all","get","res","data","genAgeData","sidoData","console","log","useEffect","getCurrentGeolocation","geoSuccess","geoError","navigator","geolocation","getCurrentPosition","alert","makeKakaoMapAxiosInstance","position","coords","kakaoMapApiConfig","x","longitude","y","latitude","headers","Authorization","useGeoData","geoData","setGeoData","kakaoMapAxiosInstance","documents","region_1depth_name","address","error","code","useGeoCovidData","sidoArray","geoCovidData","setGeoCovidData","filter","includes","gubun","getGeoCovidData","breakpoint","responsive","gutter","columns","margin","unit","device","range","whitespace","padding","flexbox","justify","align","direction","SCol","styled","div","props","Col","children","SContainer","Container","SRow","Row","SHeader","header","Title","h1","Header","SCriteria","p","Criteria","stdDay","SSection","section","h2","Section","title","Spin","keyframes","Circle","Spinner","ContentBox","Geo","DList","dl","Div","Dt","dt","Dd","dd","SidoCovid","latestSidoCovidData","sidoCovidData","defCnt","toLocaleString","incDec","ChartJS","register","CategoryScale","LinearScale","PointElement","BarElement","ChartDataLabels","Tooltip","Legend","options","maintainAspectRatio","plugins","legend","datalabels","display","color","style","width","height","TotalDefChart","totalDefCntOfWeekData","labels","createDt","isNaN","getMonth","entireDate","month","defCntData","reverse","datasets","label","backgroundColor","DefCntOfWeek","weekCovidData","DefCntOfToday","todayCovidData","nationCovidDataOfToday","find","ArcElement","GenDefChart","genCovidData","confCaseRate","GenDefCovid","genAgeCovidData","today","getFullYear","TBody","tbody","Tr","tr","Td","td","Body","bodyData","idx","THead","thead","Th","th","Head","headLabels","STable","table","Table","sidoCovidDataOfToday","sort","b","SidoCovidTable","SApp","Main","main","App","genAgeArray","defCntOfTodayData","slice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aabf51de.chunk.js","sourcesContent":["const colors = {\n  variable: {\n    // Primary color\n    blue: \"#2962ff\",\n    \"blue-light\": \"#768fff\",\n    \"blue-dark\": \"#0039cb\",\n\n    // Secondary color\n    gray: \"#eceff1\",\n    \"gray-dark\": \"#babdbe\",\n\n    // Point color\n    red: \"#ff1744\",\n    \"red-light\": \"#ff616f\",\n    \"red-dark\": \"#c4001d\",\n\n    // Base color\n    white: \"#ffffff\",\n    black: \"000\",\n  },\n};\n\nexport default colors;\n","const fonts = {\n  family: {\n    base: `'Nanum Gothic', sans-serif`,\n  },\n\n  size: {\n    sm: \"12px\",\n    md: \"18px\",\n    lg: \"20px\",\n    xl: \"24px\",\n  },\n\n  weight: {\n    light: 400,\n    bold: 700,\n    \"extra-bold\": 800,\n  },\n};\n\nexport default fonts;\n","import { createGlobalStyle } from \"styled-components\";\nimport { normalize } from \"styled-normalize\";\nimport colors from \"./constants/colors\";\nimport fonts from \"./constants/fonts\";\n\nconst GlobalStyle = createGlobalStyle`\n    ${normalize};\n    \n    /* Additional Customizing reset CSS */\n    * {\n        margin: 0;\n        font-family: ${fonts.family.base};\n        box-sizing: border-box;\n    }\n\n    html {\n        font-family: ${fonts.family.base};\n        font-size: 16px;\n    }\n\n    body {\n        font-family: ${fonts.family.base};\n        color: ${colors.variable.black};\n    }\n\n    h1 {\n        margin: 0;\n    }\n\n    a {\n        color: inherit;\n        text-decoration: none;\n    }\n\n    button,\n    input,\n    select,\n    textarea {\n        background-color: transparent;\n        border: 0;\n    }\n\n    button:focus,\n    input:focus,\n    select:focus,\n    textarea:focus {\n        outline: none;\n        box-shadow: none;\n    }\n\n    a,\n    button {\n        cursor: pointer;\n    }\n\n    button {\n        padding: 0;\n    }\n\n    ul,\n    ol {\n        padding-left: 0;\n        list-style: none;\n    }\n    `;\n\nexport default GlobalStyle;\n","// 10 이하의 숫자 앞자리수에 0을 추가하는 함수\nconst attachZeroToLeadingDigit = (day: string | number): string => {\n  if (typeof day === \"string\") {\n    return parseInt(day) < 10 ? `0${day}` : day;\n  } else {\n    return day < 10 ? `0${day}` : day.toString();\n  }\n};\n\n// yyyymmdd 형식으로 변환해주기 위한 함수\nconst generateDate = (fewDaysAgo: number = 0) => {\n  const date = new Date();\n  date.setDate(date.getDate() - fewDaysAgo);\n  const targetDate = date.toLocaleDateString();\n\n  return targetDate\n    .split(\".\")\n    .map((item) => attachZeroToLeadingDigit(item.trim()))\n    .join(\"\");\n};\n\nexport default generateDate;\n","import axios from \"axios\";\nimport generateDate from \"../generateDate\";\n\nexport interface AxiosConfig {\n  baseURL: string;\n  params: object;\n  headers?: any;\n}\n\n// current date 생성\nconst date = generateDate();\n\n// covid19 시·도발생 및 연령별·성별감염 현황에 관한 axios instance 만드는 함수\nconst makeOpenApiAxiosInstance = (\n  startCreateDt: string = date,\n  endCreateDt: string = date\n) => {\n  const openApiConfig: AxiosConfig = {\n    baseURL: \"/api\",\n    params: {\n      serviceKey: process.env.REACT_APP_OPEN_API_KEY,\n      pageNo: 1,\n      numOfRows: 10,\n      startCreateDt,\n      endCreateDt,\n    },\n  };\n\n  return axios.create(openApiConfig);\n};\n\nexport default makeOpenApiAxiosInstance;\n","import { useEffect, useState } from \"react\";\nimport makeOpenApiAxiosInstance from \"../service/apis/request-covid-data\";\nimport generateDate from \"../service/generateDate\";\n\nconst covid19GenAgeInstance = makeOpenApiAxiosInstance();\nconst covid19SidoInstance = makeOpenApiAxiosInstance(generateDate(6));\n\nconst useCovidData = () => {\n  const [covidData, setCovidData] = useState({});\n\n  const getRequest = async () => {\n    try {\n      const res = await Promise.all([\n        covid19GenAgeInstance.get(\"/gen-age\"),\n        covid19SidoInstance.get(\"/sido\"),\n      ]);\n\n      const [genAgeData, sidoData] = res.map((item) => {\n        return item.data;\n      });\n\n      setCovidData({ genAgeData, sidoData });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getRequest();\n  }, []);\n\n  return covidData;\n};\n\nexport default useCovidData;\n","// 현재 사용자 위치를 가져오는 함수\nexport type GeoSuccess = (position: GeolocationPosition) => void;\nexport type GeoError = (error: GeolocationPositionError) => void;\n\nconst getCurrentGeolocation = (geoSuccess: GeoSuccess, geoError: GeoError) => {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(geoSuccess, geoError);\n  } else {\n    alert(`Geolocation is not supported for this Browser/OS.`);\n  }\n};\n\nexport default getCurrentGeolocation;\n","import axios, { AxiosInstance } from \"axios\";\nimport { AxiosConfig } from \"./request-covid-data\";\n\n// 좌표를 주소로 변환하는 kakao Map API URL\nexport const kakaoMapURL = \"/v2/local/geo/coord2address.json\";\n\n// 사용자 위치 정보 받아서 axios config instance 만드는 함수\nconst makeKakaoMapAxiosInstance = (\n  position: GeolocationPosition\n): AxiosInstance => {\n  const { coords } = position;\n\n  const kakaoMapApiConfig: AxiosConfig = {\n    baseURL: \"https://dapi.kakao.com\",\n    params: {\n      x: coords.longitude,\n      y: coords.latitude,\n    },\n    headers: {\n      Authorization: `KakaoAK ${process.env.REACT_APP_KAKAO_API_KEY}`,\n    },\n  };\n\n  return axios.create(kakaoMapApiConfig);\n};\n\nexport default makeKakaoMapAxiosInstance;\n","import { useState, useEffect } from \"react\";\nimport getCurrentGeolocation, {\n  GeoError,\n  GeoSuccess,\n} from \"../service/get-current-pos\";\nimport makeKakaoMapAxiosInstance from \"../service/apis/request-address\";\n\nconst useGeoData = () => {\n  const [geoData, setGeoData] = useState([]);\n\n  const geoSuccess: GeoSuccess = async (position) => {\n    const kakaoMapAxiosInstance = makeKakaoMapAxiosInstance(position);\n\n    const res = await kakaoMapAxiosInstance.get(\n      \"/v2/local/geo/coord2address.json\"\n    );\n\n    const {\n      data: { documents },\n    } = res;\n\n    const {\n      address: { region_1depth_name },\n    } = documents[0];\n\n    setGeoData(region_1depth_name);\n  };\n\n  const geoError: GeoError = (error) => {\n    alert(`Error occured. Error code: ${error.code}`);\n  };\n\n  useEffect(() => {\n    getCurrentGeolocation(geoSuccess, geoError);\n  }, []);\n\n  return geoData;\n};\n\nexport default useGeoData;\n","import { useEffect, useState } from \"react\";\nimport { CovidDataType } from \"../layouts/sidoCovid\";\n\nconst useGeoCovidData = (sidoArray: CovidDataType[], geoData: string) => {\n  const [geoCovidData, setGeoCovidData] = useState({});\n\n  const getGeoCovidData = () => {\n    if (sidoArray && geoData) {\n      const data = sidoArray.filter((item) => geoData.includes(item.gubun));\n\n      setGeoCovidData(data);\n    }\n  };\n\n  useEffect(() => {\n    getGeoCovidData();\n  }, [sidoArray, geoData]);\n\n  return geoCovidData;\n};\n\nexport default useGeoCovidData;\n","const breakpoint = {\n  md: 768,\n  lg: 1200,\n};\n\n// 다시 꼼꼼하게 정리 필수\nconst responsive = {\n  gutter: 20,\n\n  columns: {\n    sm: 4,\n    md: 12,\n    lg: 12,\n  },\n\n  margin: {\n    sm: 5,\n    md: 30,\n  },\n\n  unit: {\n    lg: 75,\n  },\n\n  \"max-container-size\": {\n    md: 960,\n    lg: 1140,\n  },\n\n  device: {\n    \"above-tablet\": `@media screen and (min-width: ${breakpoint.md}px)`,\n    \"above-desktop\": `@media screen and (min-width: ${breakpoint.lg}px)`,\n  },\n\n  range: {\n    \"sm-only\": `\n      @media screen and (min-width: ${breakpoint.md}px) {\n        display: none !important;\n      }\n    `,\n\n    \"md-only\": `\n      @media screen and (max-width: ${breakpoint.md - 1}px) and (min-width: ${\n      breakpoint.lg\n    }px) {\n        display: none !important;\n      }\n    `,\n\n    \"lg-only\": `\n      @media screen and (max-width: ${breakpoint.lg - 1}px) {\n        display: none !important;\n      }\n    `,\n\n    \"sm-hidden\": `\n      @media screen and (max-width: ${breakpoint.md - 1}px) {\n        display: none !important;\n      }\n    `,\n\n    \"md-hidden\": `\n      @media screen and (min-width: ${breakpoint.md}px) and (max-width: ${\n      breakpoint.lg - 1\n    }px) {\n        display: none !important;\n      }\n    `,\n\n    \"lg-hidden\": `\n      @media screen and (min-width: ${breakpoint.lg}px) {\n        display: none !important;\n      }\n    `,\n  },\n};\n\nexport default responsive;\n","const whitespace = {\n  padding: {\n    sm: 10,\n    lg: 20,\n  },\n};\n\nexport default whitespace;\n","type Justify =\n  | \"center\"\n  | \"flex-start\"\n  | \"flex-end\"\n  | \"stretch\"\n  | \"space-around\"\n  | \"space-between\"\n  | \"space-evenly\";\n\ntype Align = \"center\" | \"flex-start\" | \"flex-end\" | \"stretch\" | \"baseline\";\n\ntype FlexDirection = \"row\" | \"column\";\n\n// flexbox 커스텀하는 함수\n\nconst flexbox = (\n  justify: Justify = \"center\",\n  align: Align = \"center\",\n  direction: FlexDirection = \"row\"\n) => {\n  return `\n        display: flex;\n        flex-direction: ${direction};\n        justify-content: ${justify};\n        align-items: ${align};\n    `;\n};\n\nexport default flexbox;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport responsive from \"../../base/constants/responsive\";\n\nexport interface ColProps {\n  sm?: number;\n  md?: number;\n  lg?: number;\n}\n\nconst SCol = styled.div<ColProps>`\n  ${(props) =>\n    props.sm ? `width: ${(props.sm / responsive.columns.sm) * 100}%; ` : null}\n\n  ${(props) =>\n    props.md\n      ? `${responsive.device[\"above-tablet\"]} {\n                width: ${(props.md / responsive.columns.md) * 100}%; \n            } `\n      : null}\n\n    ${(props) =>\n    props.lg\n      ? `${responsive.device[\"above-desktop\"]} {\n        width: ${(responsive.gutter + responsive.unit.lg) * props.lg}px;\n    }`\n      : null}\n`;\n\nconst Col: React.FC<ColProps> = (props) => {\n  const { sm, md, lg } = props;\n\n  return sm || md || lg ? (\n    <SCol sm={sm} md={md} lg={lg}>\n      {props.children}\n    </SCol>\n  ) : null;\n};\n\nexport default Col;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport responsive from \"../../base/constants/responsive\";\n\nconst SContainer = styled.div`\n  width: 100%;\n  padding: 0;\n  margin: 0 auto;\n\n  ${responsive.device[\"above-tablet\"]} {\n    max-width: ${responsive[\"max-container-size\"].md}px;\n    padding: 0 ${responsive.margin.md}px;\n  }\n\n  ${responsive.device[\"above-desktop\"]} {\n    max-width: ${responsive[\"max-container-size\"].lg}px;\n    padding: 0;\n  }\n`;\n\nconst Container: React.FC = ({ children }) => {\n  return <SContainer>{children}</SContainer>;\n};\n\nexport default Container;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst SRow = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Row: React.FC = ({ children }) => {\n  return <SRow>{children}</SRow>;\n};\n\nexport default Row;\n","import styled from \"styled-components\";\nimport colors from \"../base/constants/colors\";\nimport fonts from \"../base/constants/fonts\";\nimport responsive from \"../base/constants/responsive\";\nimport whitespace from \"../base/constants/whitespace\";\nimport flexbox from \"../base/mixins/flexbox\";\nimport Col from \"../layouts/grids/col\";\nimport Container from \"../layouts/grids/container\";\nimport Row from \"../layouts/grids/row\";\n\nconst SHeader = styled.header`\n  height: 60px;\n  background-color: ${colors.variable[\"blue-dark\"]};\n  ${flexbox()}\n`;\n\nconst Title = styled.h1`\n  display: inline-block;\n  color: ${colors.variable.white};\n  font-size: ${fonts.size.md};\n  font-weight: 600;\n  margin-left: ${whitespace.padding.lg}px;\n\n  ${responsive.device[\"above-tablet\"]} {\n    font-size: ${fonts.size.xl};\n  }\n`;\n\nconst Header = () => {\n  return (\n    <SHeader>\n      <Container>\n        <Row>\n          <Col sm={4}>\n            <Title>코로나바이러스감염증-19&#40;COVID-19&#41;</Title>\n          </Col>\n        </Row>\n      </Container>\n    </SHeader>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport fonts from \"../base/constants/fonts\";\n\ninterface CriteriaProps {\n  stdDay: string | undefined;\n  unit?: string;\n}\n\nconst SCriteria = styled.p`\n  display: inline-block;\n  width: 100%;\n  font-size: ${fonts.size.sm};\n  margin-bottom: 15px;\n`;\n\nconst Criteria: React.FC<CriteriaProps> = ({ stdDay, unit }) => {\n  return (\n    <SCriteria>\n      &#40;{`${stdDay ? stdDay : \"-\"} 기준${unit && `, 단위: ${unit}`}`}&#41;\n    </SCriteria>\n  );\n};\n\nexport default Criteria;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport fonts from \"../base/constants/fonts\";\nimport responsive from \"../base/constants/responsive\";\nimport whitespace from \"../base/constants/whitespace\";\n\ninterface SectionProps {\n  title: string;\n}\n\nconst SSection = styled.section`\n  width: 100%;\n  padding: 0 ${whitespace.padding.lg}px;\n  margin-bottom: 50px;\n`;\n\nconst Title = styled.h2`\n  font-size: ${fonts.size.md};\n  margin-bottom: 5px;\n\n  ${responsive.device[\"above-tablet\"]} {\n    font-size: ${fonts.size.lg};\n  }\n`;\n\nconst Section: React.FC<SectionProps> = ({ title, children }) => {\n  return (\n    <SSection>\n      <Title>{title}</Title>\n      {children}\n    </SSection>\n  );\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport colors from \"../base/constants/colors\";\n\nconst Spin = keyframes`\n    0% {\n        transform: rotate(0deg);\n    }\n    100% {\n        transform: rotate(360deg);\n    }\n`;\n\nconst Circle = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  border: 7px solid ${colors.variable[\"blue-dark\"]};\n  border-top: 7px solid ${colors.variable.white};\n  animation: ${Spin} 800ms infinite linear;\n`;\n\nconst Spinner = () => {\n  return <Circle></Circle>;\n};\n\nexport default Spinner;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../base/constants/colors\";\nimport fonts from \"../base/constants/fonts\";\nimport flexbox from \"../base/mixins/flexbox\";\nimport Criteria from \"../components/criteria\";\nimport Section from \"../components/section\";\nimport Spinner from \"../components/spinner\";\n\nexport type CovidDataType = {\n  createDt: string;\n  stdDay: string;\n  gubun: string;\n  incDec: number;\n  defCnt: number;\n};\n\ninterface SidoCovidProps {\n  sidoCovidData: CovidDataType[];\n}\n\nconst ContentBox = styled.div`\n  width: 100%;\n  height: 150px;\n  ${flexbox(\"center\", \"center\", \"column\")}\n  background-color: ${colors.variable.gray};\n  border-radius: 5px;\n`;\n\nconst Geo = styled.p`\n  font-weight: ${fonts.weight.bold};\n  font-size: 34px;\n  margin-bottom: 15px;\n`;\n\nconst DList = styled.dl``;\n\nconst Div = styled.div`\n  ${flexbox(\"flex-start\")}\n  margin-bottom: 5px;\n`;\n\nconst Dt = styled.dt`\n  &:after {\n    content: \":\";\n    margin-right: 3px;\n  }\n`;\n\nconst Dd = styled.dd`\n  strong {\n    color: ${colors.variable.red};\n  }\n`;\n\nconst SidoCovid: React.FC<SidoCovidProps | undefined> = ({ sidoCovidData }) => {\n  let latestSidoCovidData;\n  if (sidoCovidData) {\n    latestSidoCovidData = sidoCovidData[0];\n  }\n\n  return (\n    <Section title=\"지역 발생현황\">\n      <Criteria stdDay={latestSidoCovidData?.stdDay} unit=\"명\" />\n      <ContentBox>\n        {latestSidoCovidData ? (\n          <>\n            <Geo>{latestSidoCovidData.gubun}</Geo>\n            <DList>\n              <Div>\n                <Dt>누적확진자</Dt>\n                <Dd>{latestSidoCovidData.defCnt.toLocaleString()}</Dd>\n              </Div>\n              <Div>\n                <Dt>신규확진자</Dt>\n                <Dd>\n                  <strong>\n                    {latestSidoCovidData.incDec.toLocaleString()} &#9650;\n                  </strong>\n                </Dd>\n              </Div>\n            </DList>\n          </>\n        ) : (\n          <Spinner />\n        )}\n      </ContentBox>\n    </Section>\n  );\n};\n\nexport default SidoCovid;\n","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  BarElement,\n  CategoryScale,\n  Chart as ChartJS,\n  Legend,\n  LinearScale,\n  PointElement,\n  Title,\n  Tooltip,\n} from \"chart.js\";\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\nimport { CovidDataType } from \"../layouts/sidoCovid\";\n\ninterface TotalDefChartProps {\n  totalDefCntOfWeekData?: CovidDataType[];\n}\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  BarElement,\n  ChartDataLabels,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst options = {\n  maintainAspectRatio: false,\n  plugins: {\n    legend: {\n      position: \"top\" as const,\n    },\n    datalabels: {\n      display: true,\n      color: \"#000\",\n    },\n  },\n};\n\nconst style = {\n  width: \"100%\",\n  height: \"100%\",\n};\n\nconst TotalDefChart: React.FC<TotalDefChartProps> = ({\n  totalDefCntOfWeekData,\n}) => {\n  const labels = totalDefCntOfWeekData?.map((item) => {\n    const date = new Date(item.createDt);\n\n    if (isNaN(date.getMonth()) || isNaN(date.getDate())) {\n      const [entireDate, time] = item.createDt.split(\" \");\n      const [year, month, day] = entireDate.split(\"-\");\n      return `${month}.${day}`;\n    } else {\n      return `${date.getMonth() + 1}.${date.getDate()}`;\n    }\n  });\n\n  const defCntData = totalDefCntOfWeekData?.map((item) => item.incDec);\n\n  const data = {\n    labels: labels?.reverse(),\n    datasets: [\n      {\n        label: \"확진자 수\",\n        data: defCntData?.reverse(),\n        backgroundColor: \"rgba(41, 143, 255, 0.5)\",\n      },\n    ],\n  };\n\n  return <Bar options={options} data={data} style={style} />;\n};\n\nexport default TotalDefChart;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport flexbox from \"../base/mixins/flexbox\";\nimport TotalDefChart from \"../charts/totalDefChart\";\nimport Criteria from \"../components/criteria\";\nimport Section from \"../components/section\";\nimport Spinner from \"../components/spinner\";\nimport { CovidDataType } from \"./sidoCovid\";\n\ninterface DefCntOfWeekProps {\n  weekCovidData: CovidDataType[] | undefined;\n}\n\nconst ContentBox = styled.div`\n  width: 100%;\n  height: 350px;\n  ${flexbox()}\n`;\n\nconst DefCntOfWeek: React.FC<DefCntOfWeekProps> = ({ weekCovidData }) => {\n  const totalDefCntOfWeekData = weekCovidData?.filter(\n    (item) => item.gubun === \"합계\"\n  );\n\n  const stdDay = weekCovidData && weekCovidData[0].stdDay;\n\n  return (\n    <Section title=\"최근 7일 확진자 발생 추이\">\n      <Criteria stdDay={stdDay} unit=\"명\" />\n\n      <ContentBox>\n        {totalDefCntOfWeekData ? (\n          <TotalDefChart totalDefCntOfWeekData={totalDefCntOfWeekData} />\n        ) : (\n          <Spinner />\n        )}\n      </ContentBox>\n    </Section>\n  );\n};\n\nexport default DefCntOfWeek;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../base/constants/colors\";\nimport fonts from \"../base/constants/fonts\";\nimport flexbox from \"../base/mixins/flexbox\";\nimport Criteria from \"../components/criteria\";\nimport Section from \"../components/section\";\nimport Spinner from \"../components/spinner\";\nimport { CovidDataType } from \"./sidoCovid\";\n\ninterface DefCntOfTodayProps {\n  todayCovidData: CovidDataType[];\n}\n\nconst ContentBox = styled.div`\n  width: 100%;\n  height: 150px;\n  ${flexbox(\"center\", \"center\", \"column\")}\n  background-color: ${colors.variable.gray};\n  border-radius: 5px;\n`;\n\nconst Geo = styled.p`\n  font-weight: ${fonts.weight.bold};\n  font-size: 34px;\n  margin-bottom: 15px;\n`;\n\nconst DList = styled.dl``;\n\nconst Div = styled.div`\n  ${flexbox(\"flex-start\")}\n  margin-bottom: 5px;\n`;\n\nconst Dt = styled.dt`\n  &:after {\n    content: \":\";\n    margin-right: 3px;\n  }\n`;\n\nconst Dd = styled.dd`\n  strong {\n    color: ${colors.variable.red};\n  }\n`;\n\nconst DefCntOfToday: React.FC<DefCntOfTodayProps> = ({ todayCovidData }) => {\n  const nationCovidDataOfToday = todayCovidData?.find(\n    (item) => item.gubun === \"합계\"\n  );\n\n  return (\n    <Section title=\"전국 발생현황\">\n      <Criteria\n        stdDay={nationCovidDataOfToday && nationCovidDataOfToday.stdDay}\n        unit=\"명\"\n      />\n\n      <ContentBox>\n        {nationCovidDataOfToday ? (\n          <>\n            <Geo>전국</Geo>\n            <DList>\n              <Div>\n                <Dt>누적확진자</Dt>\n                <Dd>{nationCovidDataOfToday.defCnt.toLocaleString()}</Dd>\n              </Div>\n              <Div>\n                <Dt>신규확진자</Dt>\n                <Dd>\n                  <strong>\n                    {nationCovidDataOfToday.incDec.toLocaleString()} &#9650;\n                  </strong>\n                </Dd>\n              </Div>\n            </DList>\n          </>\n        ) : (\n          <Spinner />\n        )}\n      </ContentBox>\n    </Section>\n  );\n};\n\nexport default DefCntOfToday;\n","import React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { Chart as ChartJS, ArcElement, Legend, Title, Tooltip } from \"chart.js\";\nimport { GenAgeDataType } from \"../layouts/genDefCovid\";\n\ninterface GenDefChartProps {\n  genCovidData: GenAgeDataType[];\n}\n\nChartJS.register(ArcElement, Title, Tooltip, Legend);\n\nconst style = {\n  width: \"100%\",\n  height: \"100%\",\n};\n\nconst GenDefChart: React.FC<GenDefChartProps> = ({ genCovidData }) => {\n  const defPercentData = genCovidData?.map((item) => item.confCaseRate);\n\n  const data = {\n    labels: [\"여성\", \"남성\"],\n    datasets: [\n      {\n        label: \"\",\n        data: defPercentData,\n        backgroundColor: [\"rgba(255, 23, 68, 0.3)\", \"rgba(41, 143, 255, 0.5)\"],\n      },\n    ],\n  };\n\n  return (\n    <Doughnut\n      data={data}\n      options={{ maintainAspectRatio: false }}\n      style={style}\n    />\n  );\n};\n\nexport default GenDefChart;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport flexbox from \"../base/mixins/flexbox\";\nimport GenDefChart from \"../charts/genDefChart\";\nimport Criteria from \"../components/criteria\";\nimport Section from \"../components/section\";\nimport Spinner from \"../components/spinner\";\n\nexport type GenAgeDataType = {\n  gubun: string;\n  confCaseRate: number | string;\n  deathRate: number | string;\n  createDt: string;\n};\n\nexport interface GenCovidProps {\n  genAgeCovidData: GenAgeDataType[];\n}\n\nconst ContentBox = styled.div`\n  width: 100%;\n  height: 350px;\n  ${flexbox()}\n`;\n\nconst GenDefCovid: React.FC<GenCovidProps> = ({ genAgeCovidData }) => {\n  const genCovidData = genAgeCovidData?.filter(\n    (item) => item.gubun === \"여성\" || item.gubun === \"남성\"\n  );\n\n  const today = new Date();\n  const stdDay = `${today.getFullYear()}년 ${\n    today.getMonth() + 1\n  }월 ${today.getDate()}일`;\n\n  return (\n    <Section title=\"성별 확진자 현황\">\n      <Criteria stdDay={stdDay} unit=\"%\" />\n      <ContentBox>\n        {genCovidData ? (\n          <GenDefChart genCovidData={genCovidData} />\n        ) : (\n          <Spinner />\n        )}\n      </ContentBox>\n    </Section>\n  );\n};\n\nexport default GenDefCovid;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../base/constants/colors\";\nimport fonts from \"../base/constants/fonts\";\nimport responsive from \"../base/constants/responsive\";\nimport whitespace from \"../base/constants/whitespace\";\nimport { CovidDataType } from \"../layouts/sidoCovid\";\n\ninterface BodyProps {\n  bodyData: CovidDataType[];\n}\n\nconst TBody = styled.tbody`\n  text-align: center;\n`;\n\nconst Tr = styled.tr``;\n\nconst Td = styled.td`\n  padding: ${whitespace.padding.sm}px 0;\n  border-bottom: 1px solid ${colors.variable.gray};\n  font-size: ${fonts.size.sm};\n\n  &:nth-child(3) {\n    color: ${colors.variable.red};\n    font-weight: 700;\n  }\n\n  ${responsive.device[\"above-tablet\"]} {\n    font-size: ${fonts.size.md};\n  }\n`;\n\nconst Body: React.FC<BodyProps> = ({ bodyData }) => {\n  return (\n    <TBody>\n      {bodyData.map((item, idx) => {\n        return (\n          <Tr key={idx}>\n            <Td>{item.gubun}</Td>\n            <Td>{item.defCnt.toLocaleString()}</Td>\n            <Td>{item.incDec.toLocaleString()} &#9650;</Td>\n          </Tr>\n        );\n      })}\n    </TBody>\n  );\n};\n\nexport default Body;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../base/constants/colors\";\nimport fonts from \"../base/constants/fonts\";\nimport responsive from \"../base/constants/responsive\";\nimport whitespace from \"../base/constants/whitespace\";\n\ninterface HeadProps {\n  headLabels: string[];\n}\n\nconst THead = styled.thead`\n  background-color: ${colors.variable[\"blue-dark\"]};\n  color: ${colors.variable.white};\n`;\n\nconst Tr = styled.tr``;\n\nconst Th = styled.th`\n  padding: ${whitespace.padding.sm}px 0;\n  border-top: 1px solid ${colors.variable.gray};\n  border-bottom: 1px solid ${colors.variable.gray};\n  font-size: ${fonts.size.sm};\n  font-weight: 500;\n\n  ${responsive.device[\"above-tablet\"]} {\n    font-size: ${fonts.size.md};\n  }\n`;\n\nconst Head: React.FC<HeadProps> = ({ headLabels }) => {\n  return (\n    <THead>\n      <Tr>\n        {headLabels.map((label, idx) => (\n          <Th key={idx}>{label}</Th>\n        ))}\n      </Tr>\n    </THead>\n  );\n};\n\nexport default Head;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Spinner from \"../components/spinner\";\nimport { CovidDataType } from \"../layouts/sidoCovid\";\nimport Body from \"./body\";\nimport Head from \"./head\";\n\ninterface TableProps {\n  sidoCovidDataOfToday: CovidDataType[];\n}\n\nconst STable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n`;\n\nconst Table: React.FC<TableProps> = ({ sidoCovidDataOfToday }) => {\n  const bodyData = sidoCovidDataOfToday\n    ?.filter((item) => item.gubun !== \"합계\")\n    .sort((a, b) => (a.defCnt > b.defCnt ? -1 : 1));\n\n  return bodyData ? (\n    <STable>\n      <Head headLabels={[\"위치\", \"누적확진\", \"신규확진\"]} />\n      <Body bodyData={bodyData} />\n    </STable>\n  ) : (\n    <Spinner />\n  );\n};\n\nexport default Table;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport flexbox from \"../base/mixins/flexbox\";\nimport Criteria from \"../components/criteria\";\nimport Section from \"../components/section\";\nimport Spinner from \"../components/spinner\";\nimport Table from \"../table/table\";\nimport { CovidDataType } from \"./sidoCovid\";\n\ninterface SidoCovidTableProps {\n  todayCovidData: CovidDataType[] | undefined;\n}\n\nconst ContentBox = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  ${flexbox()}\n`;\n\nconst SidoCovidTable: React.FC<SidoCovidTableProps> = ({ todayCovidData }) => {\n  return (\n    <Section title=\"지역별 발생 현황\">\n      <Criteria stdDay={todayCovidData && todayCovidData[0].stdDay} unit=\"명\" />\n      <ContentBox>\n        {todayCovidData ? (\n          <Table sidoCovidDataOfToday={todayCovidData} />\n        ) : (\n          <Spinner />\n        )}\n      </ContentBox>\n    </Section>\n  );\n};\n\nexport default SidoCovidTable;\n","import GlobalStyle from \"./base/globalStyle\";\nimport styled from \"styled-components\";\nimport useCovidData from \"./hooks/useCovidData\";\nimport useGeoData from \"./hooks/useGeoData\";\nimport useGeoCovidData from \"./hooks/useGeoCovidData\";\nimport Header from \"./components/header\";\nimport Container from \"./layouts/grids/container\";\nimport Row from \"./layouts/grids/row\";\nimport Col from \"./layouts/grids/col\";\nimport SidoCovid from \"./layouts/sidoCovid\";\nimport DefCntOfWeek from \"./layouts/defCntOfWeek\";\nimport DefCntOfToday from \"./layouts/defCntOfToday\";\nimport GenDefCovid from \"./layouts/genDefCovid\";\nimport SidoCovidTable from \"./layouts/sidoCovidTable\";\n\nconst SApp = styled.div`\n  width: 100%;\n`;\n\nconst Main = styled.main`\n  margin: 30px 0;\n`;\n\nconst App = () => {\n  const { genAgeData: genAgeArray, sidoData: sidoArray } = useCovidData();\n\n  const geoData = useGeoData();\n\n  const geoCovidData = useGeoCovidData(sidoArray, geoData);\n\n  const GUBUN_CNT = 19;\n\n  const defCntOfTodayData = sidoArray?.slice(0, GUBUN_CNT);\n\n  return (\n    <SApp>\n      <Header />\n      <Main>\n        <Container>\n          <Row>\n            <Col sm={4} md={6}>\n              <SidoCovid sidoCovidData={geoCovidData} />\n            </Col>\n            <Col sm={4} md={6}>\n              <DefCntOfToday todayCovidData={defCntOfTodayData} />\n            </Col>\n          </Row>\n          <Row>\n            <Col sm={4} md={6}>\n              <DefCntOfWeek weekCovidData={sidoArray} />\n            </Col>\n            <Col sm={4} md={6}>\n              <GenDefCovid genAgeCovidData={genAgeArray} />\n            </Col>\n          </Row>\n          <Row>\n            <Col sm={4}>\n              <SidoCovidTable todayCovidData={defCntOfTodayData} />\n            </Col>\n          </Row>\n        </Container>\n      </Main>\n      <GlobalStyle />\n    </SApp>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}